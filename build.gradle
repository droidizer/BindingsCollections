// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.deps = [:]
    def deps = [:]
    def versions = [:]
    versions.retrofit = "2.3.0"
    versions.okhttp = "3.8.1"
    versions.kotlin = '1.2.51'
    versions.support = '27.1.1'
    versions.testrunner = '1.0.1'
    versions.junit = '4.12'
    versions.espresso = '3.0.2'
    versions.dagger = "2.15"
    versions.rxjava = "2.1.3"
    versions.rxandroid = '2.0.2'
    versions.paging = '1.0.0'
    versions.lifecycle = '1.1.1'
    versions.hamcrest = '1.3'
    versions.mockito = "2.7.19"

    def kotlin = [:]
    kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    kotlin.gradleplugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    deps.kotlin = kotlin

    def support = [:]
    support.appcompat = "com.android.support:appcompat-v7:$versions.support"
    support.cardview = "com.android.support:cardview-v7:$versions.support"
    support.design = "com.android.support:design:$versions.support"
    deps.support = support


    def retrofit = [:]
    retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
    retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
    retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    retrofit.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
    deps.retrofit = retrofit

    def dagger = [:]
    dagger.runtime_support = "com.google.dagger:dagger-android-support:$versions.dagger"
    dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
    dagger.annotation_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
    dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
    deps.dagger = dagger

    def rxjava = [:]
    rxjava.runtime = "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    rxjava.rxandroid = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    deps.rxjava = rxjava

    def aac = [:]
    aac.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
    aac.reactive = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
    aac.paging = "android.arch.paging:runtime:$versions.paging"
    deps.aac = aac

    def testing = [:]
    testing.junit = "junit:junit:$versions.junit"
    testing.espresso = "com.android.support.test.espresso:espresso-core:$versions.espresso"
    testing.runner = "com.android.support.test:runner:$versions.testrunner"
    testing.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
    testing.mockit_core = "org.mockito:mockito-core:$versions.mockito"
    testing.arch_core = "android.arch.core:core-testing:$versions.lifecycle"
    testing.espresso_intent = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
    testing.espresso_contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
    deps.testing = testing

    def build_versions = [:]
    build_versions.min_sdk = 15
    build_versions.target_sdk = 27
    build_versions.build_tools = "27.0.3"
    ext.build_versions = build_versions

    ext.deps = deps

    ext.maven = [
            'siteUrl'            : 'https://github.com/bblackbelt/BindingsCollections',
            'gitUrl'             : 'https://github.com/bblackbelt/BindingsCollections.git',
            'repo'               : 'BindingsCollections',
            'artifactGroup'      : 'com.bblackbelt',
            'licenses'           : ["Apache-2.0"],
            'artifactVersion'    : '1.0.0',
            'artifactDesc'       : 'Android databinding/livedata playground',
            'artifactVersionCode': 1
    ]

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
        classpath deps.kotlin.gradleplugin
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
